plugins {
	id 'java'
	id 'com.github.johnrengelman.shadow'
	id 'maven-publish'
	id 'eclipse'
}

description = 'AlchemicLibrary'
version = '2.5.9'

repositories {
	mavenLocal()
}

dependencies {
	
	compileOnly 'mysql:mysql-connector-java:5.1.41'
	compileOnly 'org.jetbrains:annotations:17.0.0'
	shadow 'org.spigotmc:spigot-api:1.14.4-R0.1-SNAPSHOT'
	shadow 'com.comphenix.protocol:ProtocolLib-API:4.4.0'
	shadow 'me.clip:placeholderapi:2.10.4'
	implementation 'commons-io:commons-io:2.6'
	implementation 'net.wesjd:anvilgui:1.2.2-SNAPSHOT'
	implementation project(':AlchemicLibrary-api')
	implementation project(':AlchemicLibrary-v1_13_R2')
	implementation project(':AlchemicLibrary-v1_14_R1')
}

shadowJar {
	baseName = project.description
	classifier = ''
	archiveVersion = project.version
	
	doFirst{
		relocate 'net.wesjd', 'net.shade.wesjd'
		relocate 'org.apache', 'org.shade.apache'
	
		println 'Building jar file...'
		println 'Version ' + project.version
	}
	
	minimize {
		exclude(dependency('me.alchemi:.*:.*'))
	}
	
	exclude 'config.yml'
	minimize()

}

task copy(type: Copy) {
	dependsOn 'shadowJar'
	group = 'Build'
	description = 'Install project to Test-Server.'

	doFirst{
		println 'Installing jar file from ${jar.archivePath}'

		from jar.archivePath
		into '../../Test-Server/plugins/'
		rename '(.*)-(.*).jar', '$1.jar'
	}
}

processResources {
	filter  { line -> line.replaceAll('\\$\\{project.version\\}', project.version)}
}

task export {
	dependsOn 'shadowJar'
	dependsOn 'publishToMavenLocal'
	finalizedBy 'incrementVersion'

	doLast{
		println 'Exporting to jar file.'
	}
}

publishing {
  publications {
    shadow(MavenPublication) { publication ->
      project.shadow.component(publication)
    }
  }
}

task incrementVersion {
	doFirst{
		String minor=version.substring(version.lastIndexOf('.')+1)
		int m=minor.toInteger()+1
		String major=version.substring(0,version.length()-1)
		String s=buildFile.getText().replaceFirst('version = \'' + project.version + '\'','version = \''+major+m+'\'')
		buildFile.setText(s)

		println 'New version ' + major + m
	}
}

eclipse {
	autoBuildTasks copy
}
